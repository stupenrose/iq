package org.iqbuild.maven

import org.iqbuild.ResolvedDependency
import org.iqbuild.ModuleDescriptor
import org.iqbuild.Constants
import org.iqbuild.DependencyResolutionResult

object PomGenerator {
  def generatePOM(descriptor:ModuleDescriptor, tree:DependencyResolutionResult):String = {
                  
        
        if(descriptor.build == "jar"){
                      	
          val defaultVersion = Constants.INTERNAL_VERSION
          val header = """                             #       _____ ____  ____  _    _ _____ _      _____  
                     #      |_   _/ __ \|  _ \| |  | |_   _| |    |  __ \ 
                     #        | || |  | | |_) | |  | | | | | |    | |  | |
                     #        | || |  | |  _ <| |  | | | | | |    | |  | |
                     #       _| || |__| | |_) | |__| |_| |_| |____| |__| |
                     #      |_____\___\_\____/ \____/|_____|______|_____/ """       
    	    s"""<?xml version="1.0" encoding="UTF-8" standalone="no"?>
                               #<!-- 
  ${header}
                     # 
                     #     DO NOT MODIFY: THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY 
                     #     IQBUILD AND MAY BE OVERWRITTEN AUTOMATICALLY AT ANY TIME-->
                     # 
                     #<project xmlns="http://maven.apache.org/POM/4.0.0" 
                     #         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                     #           xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"> 
                     #    <modelVersion>4.0.0</modelVersion>
                     #    <groupId>${descriptor.id.group}</groupId>
                     #    <artifactId>${descriptor.id.name}</artifactId>
                     #    <version>${defaultVersion}</version>
                     #    
                     #    <properties>
                     #        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                     #    </properties>
                     #    
                     #    <build>
                     #        <sourceDirectory>src</sourceDirectory>
                     #        <testSourceDirectory>target/nothing</testSourceDirectory>
                     #    </build>
                     #    
                     #    <dependencies>
                     #    ${ tree.dependencies.map{dep=>
                  s"""        <dependency>
                     #           <groupId>${dep.spec.module.group}</groupId>
                     #           <artifactId>${dep.spec.module.name}</artifactId>
                     #           <version>${dep.spec.version.getOrElse(defaultVersion)}</version>
                     #        </dependency>""".stripMargin('#')}.mkString("\n","\n","\n")}
                     #    </dependencies>
                     #    
                     #</project>""".stripMargin('#')
        }else{
          throw new Exception(s"Unsupported build type for ${descriptor.id}: ${descriptor.build}")
        }
      }
}